@page "/aluno"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<MudGrid>
    <MudItem xs="6">
        <MudImage Src="images/instrutor-na-academia.jpg" Style="width: 100%; height: auto;" />
    </MudItem>
    <MudItem xs="6">
        <MudText Typo="Typo.h6">
            <MudText Typo="Typo.h5" >Olá! Você como aluno poderá escolher o personal que tem o perfil para o seu objetivo!</MudText>
            
            <p>
            -Você quer emagrecer?
            </p>
            <p>
                -Você quer ganhar massa muscular?
            </p>
            <p>
                -Você quer qualidade de vida?
            </p>
            <MudText Typo="Typo.h4" Align="Align.Center">Temos um profissional para você!</MudText>
            <MudGrid>
                <MudItem xs="12" sm="7">
                    <MudPaper Class="pa-4">
                        <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                            <MudTextField T="string" Label="Usuário" Required="true" RequiredError="Usuário é requerido!" />
                            <MudTextField T="string" Label="Email" Required="true" RequiredError="E-mail é requerido!"
                                          Validation="@(new EmailAddressAttribute() {ErrorMessage = "O e-mail é inválido"})" />
                            <MudTextField T="string" Label="Senha" HelperText="Escolha uma senha forte" @ref="pwField1"
                                          InputType="InputType.Password"
                                          Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                          RequiredError="Senha é requerido!" />
                            <MudTextField T="string"
                                          Label="Senha" HelperText="Repita a senha" InputType="InputType.Password"
                                          Validation="@(new Func<string, string>(PasswordMatch))" />
                            <div class="d-flex">
                                <MudRadioGroup T="string" Required="true" RequiredError="Account type is required!">
                                    <MudRadio Value="@("Personal")">Personal</MudRadio>
                                    <MudRadio Value="@("Aluno")">Aluno</MudRadio>
                                </MudRadioGroup>
                            </div>
                            <div class="d-flex align-center justify-space-between">
                                <MudCheckBox T="bool" Required="true" RequiredError="You must agree" Label="I agree!" />
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Registrar</MudButton>
                            </div>
                        </MudForm>
                    </MudPaper>
                    <MudPaper Class="pa-4 mt-4">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="@(()=>form.Validate())">Validar</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="@(()=>form.ResetAsync())" Class="mx-2">Resetar</MudButton>
                        <MudButton Variant="Variant.Filled" DropShadow="false" OnClick="@(()=>form.ResetValidation())">Resetar Validação</MudButton>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="5">
                    @if (errors.Length > 0)
                    {
                        <MudPaper Class="pa-4 mud-height-full">

                            <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
                            @foreach (var error in errors)
                            {
                                <MudText Color="@Color.Error">@error</MudText>
                            }
                        </MudPaper>
                    }
                   
                </MudItem>
            </MudGrid>
        </MudText>
    </MudItem>
</MudGrid>

@code {
        bool success;
        string[] errors = { };
        MudTextField<string> pwField1;
        MudForm form;

        private IEnumerable<string> PasswordStrength(string pw)
        {
            if (string.IsNullOrWhiteSpace(pw))
            {
                yield return "Password is required!";
                yield break;
            }
            if (pw.Length < 8)
                yield return "Password must be at least of length 8";
            if (!Regex.IsMatch(pw, @"[A-Z]"))
                yield return "Password must contain at least one capital letter";
            if (!Regex.IsMatch(pw, @"[a-z]"))
                yield return "Password must contain at least one lowercase letter";
            if (!Regex.IsMatch(pw, @"[0-9]"))
                yield return "Password must contain at least one digit";
}
    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }

}
